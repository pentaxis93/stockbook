name: CI

on:
  push:
    branches: ['**']  # Run on push to any branch
  pull_request:
    branches: ['**']  # Run on any pull request

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest
    timeout-minutes: 20  # Adjust based on your test suite size
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for some pre-commit hooks
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
      
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-${{ runner.os }}-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Install the package in editable mode for import resolution
          pip install -e .
      
      - name: Install pre-commit
        run: pip install pre-commit
      
      - name: Run pre-commit
        run: pre-commit run --all-files --show-diff-on-failure
        env:
          # Ensure the hooks script has access to all tools
          PYTHONPATH: ${{ github.workspace }}
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            htmlcov/
            .coverage
            coverage-layers.json
          retention-days: 7
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            .pytest_cache/
            pytest-report.xml
          retention-days: 7
          if-no-files-found: ignore