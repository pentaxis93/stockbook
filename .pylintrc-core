[MESSAGES CONTROL]
# STRICTEST configuration for CORE business logic (domain, application, infrastructure)
# Only disable rules that are genuinely necessary or handled by other tools
disable=
    # Code structure - reasonable for domain models
    too-few-public-methods,
    too-many-public-methods,
    too-many-instance-attributes,
    
    # Abstract base classes - pass statements are required
    unnecessary-pass,
    
    # Import organization - handled by isort
    wrong-import-order,
    ungrouped-imports,
    import-outside-toplevel,  # Sometimes needed to avoid circular imports
    
    # Line length - handled by black
    line-too-long,
    
    # Temporary architectural issues - TODO: remove these after DB refactor
    no-member,  # Due to dynamic repository creation
    
    # Domain entities legitimately need many fields
    too-many-positional-arguments,
    
    # Some duplication acceptable for clarity in domain patterns
    duplicate-code,
    
    # Exception chaining sometimes less clear in domain logic
    raise-missing-from,
    
    # Technical debt and development patterns
    fixme,  # TODO comments are legitimate in business logic
    
    # Value object internal operations need protected access
    protected-access

[FORMAT]
max-line-length=88

[DESIGN]
# Strict but reasonable limits for core business logic
max-args=12  # Exception classes need context parameters
max-locals=15
max-returns=8  # Allow reasonable branching in business logic
max-branches=12
max-statements=50
max-positional-arguments=8  # Domain entities need many fields

[BASIC]
# Require good naming and documentation for core logic
good-names=["i", "j", "k", "ex", "Run", "_", "id"]
docstring-min-length=10