[MESSAGES CONTROL]
# LENIENT configuration for CONFIGURATION and utility files
# Allows config-specific patterns
disable=
    # Code structure
    too-few-public-methods,
    too-many-public-methods,
    too-many-instance-attributes,
    unnecessary-pass,
    
    # Import organization - handled by isort
    wrong-import-order,
    ungrouped-imports,
    import-outside-toplevel,
    line-too-long,
    
    # Architectural issues
    no-member,
    too-many-positional-arguments,
    duplicate-code,
    raise-missing-from,
    
    # UI patterns (some config files might use these)
    broad-exception-caught,
    logging-fstring-interpolation,
    consider-using-join,
    redefined-outer-name,
    reimported,
    method-hidden,
    protected-access,
    consider-iterating-dictionary,
    
    # Configuration-specific patterns
    fixme,  # TODO comments acceptable in config
    invalid-name,  # Config constants use UPPER_CASE
    attribute-defined-outside-init,  # Config classes use dynamic attributes
    unused-argument,  # Error handlers have required unused params
    no-else-return,  # Config readability preference
    unused-import,  # Future compatibility imports
    
    # Framework-specific (dependency injection)
    c-extension-no-member

[FORMAT]
max-line-length=88

[DESIGN]
# Very lenient for config files
max-args=15
max-locals=25
max-returns=10
max-branches=20
max-statements=80
max-positional-arguments=10

[BASIC]
good-names=["i", "j", "k", "ex", "Run", "_", "id", "ui", "st", "db", "DEBUG"]
docstring-min-length=5