{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(black:*)",
      "Bash(find:*)",
      "Bash(isort:*)",
      "Bash(pyright:*)",
      "Bash(python -m pytest tests/test_config.py -v)",
      "Bash(python -m pytest tests/test_config.py::TestConfigEnvironmentOverrides -v)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(rg:*)",
      "Bash(python -m pytest tests/test_error_handling.py -v)",
      "Bash(python -m pytest tests/test_error_handling.py::TestErrorLogger::test_error_logger_logs_stockbook_error -v)",
      "Bash(python -m pytest tests/test_error_handling.py -q)",
      "Bash(python -m pytest tests/ -q)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(python -m pytest tests/ -W error::DeprecationWarning 2 >& 1)",
      "Bash(python -m pytest tests/test_error_handling.py::TestCustomExceptionClasses::test_stockbook_error_base_class -v)",
      "Bash(python -m pytest tests/test_components.py -v)",
      "Bash(python -m pytest tests/test_components.py::TestStockSymbolInput::test_stock_symbol_input_validation_error -v)",
      "Bash(python -m pytest tests/test_components.py -q)",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/domain/value_objects/test_money.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/test_stock_symbol.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/test_quantity.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/ -v)",
      "Bash(python -m pytest tests/domain/entities/test_stock_entity.py -v)",
      "Bash(python -m pytest tests/domain/events/test_domain_events.py -v)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(python -m pytest tests/domain/ -v)",
      "Bash(python -m pytest --tb=short)",
      "Bash(pyright:*)",
      "Bash(python -m pytest tests/domain/ -q)",
      "Bash(python -m pytest tests/application/commands/test_stock_commands.py -v)",
      "Bash(python -m pytest tests/application/services/test_stock_application_service.py -v)",
      "Bash(python -m pytest tests/application/ -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py -v)",
      "Bash(python -m pytest tests/infrastructure/ -v --tb=line)",
      "Bash(python -m pytest tests/infrastructure/ -v)",
      "Bash(python -m pytest tests/infrastructure/ -v --tb=short)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_create_duplicate_symbol_raises_error -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_rollback_on_exception -v -s)",
      "Bash(python -m pytest tests/infrastructure/ -x --tb=short)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_provides_repository_access -v)",
      "Bash(python -m pytest tests/infrastructure/ --tb=no -q)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_commit_without_context_manager -v)",
      "Bash(python -m pytest --tb=no -q)",
      "Bash(python -m pytest --tb=short -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py::TestDatabaseConnection::test_close_connection -v -s)",
      "Bash(python3:*)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py::TestDatabaseConnection::test_close_connection -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_nested_context_managers_not_supported -v -s)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_nested_context_managers_not_supported -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_error_handling -v -s)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_repository_handles_database_errors -v -s)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_error_handling -v)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_repository_handles_database_errors -v)",
      "Bash(python -m pytest --tb=no --co -q)",
      "Bash(python -m pytest tests/presentation/ -v --tb=short)",
      "Bash(python -m pytest tests/presentation/view_models/ -v --tb=short)",
      "Bash(find:*)",
      "Bash(python -m pytest tests/presentation/controllers/ -v --tb=short)",
      "Bash(grep:*)",
      "Bash(python -m pytest tests/presentation/controllers/test_stock_controller.py::TestStockController::test_controller_input_sanitization -v)",
      "Bash(python -m pytest tests/presentation/controllers/test_stock_controller.py -v)",
      "Bash(python -m pytest tests/presentation/ -v)",
      "Bash(python -m pytest tests/presentation/adapters/test_streamlit_stock_adapter.py::TestStreamlitStockAdapter::test_render_sidebar_navigation -v)",
      "Bash(python -m pytest tests/presentation/adapters/test_streamlit_stock_adapter.py::TestStreamlitStockAdapter::test_adapter_session_state_management -v)",
      "Bash(python -m pytest tests/presentation/coordinators/test_stock_page_coordinator.py -v)",
      "Bash(python -m pytest tests/ --tb=no -q)",
      "Bash(python -m pytest tests/presentation/ --tb=short -q)",
      "Bash(python -m pytest tests/presentation/view_models/ -v)",
      "Bash(python:*)",
      "Bash(pytest:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(pylint:*)",
      "Bash(sed:*)",
      "Bash(ls:*)",
      "Bash(git check-ignore:*)",
      "Bash(git config:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(whoami:*)",
      "Bash(pwd:*)",
      "Bash(date:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(tree:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(uptime:*)",
      "Bash(uname:*)",
      "Bash(env:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(type:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(ln:*)",
      "Bash(cp:*)",
      "Bash(rsync:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "Bash(git remote:*)",
      "Bash(git show:*)",
      "Bash(git ls-files:*)",
      "Bash(gh:*)"
    ],
    "deny": []
  }
}