{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(black:*)",
      "Bash(find:*)",
      "Bash(isort:*)",
      "Bash(pyright:*)",
      "Bash(python -m pytest tests/test_config.py -v)",
      "Bash(python -m pytest tests/test_config.py::TestConfigEnvironmentOverrides -v)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(rg:*)",
      "Bash(python -m pytest tests/test_error_handling.py -v)",
      "Bash(python -m pytest tests/test_error_handling.py::TestErrorLogger::test_error_logger_logs_stockbook_error -v)",
      "Bash(python -m pytest tests/test_error_handling.py -q)",
      "Bash(python -m pytest tests/ -q)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(python -m pytest tests/ -W error::DeprecationWarning 2 >& 1)",
      "Bash(python -m pytest tests/test_error_handling.py::TestCustomExceptionClasses::test_stockbook_error_base_class -v)",
      "Bash(python -m pytest tests/test_components.py -v)",
      "Bash(python -m pytest tests/test_components.py::TestStockSymbolInput::test_stock_symbol_input_validation_error -v)",
      "Bash(python -m pytest tests/test_components.py -q)",
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/domain/value_objects/test_money.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/test_stock_symbol.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/test_quantity.py -v)",
      "Bash(python -m pytest tests/domain/value_objects/ -v)",
      "Bash(python -m pytest tests/domain/entities/test_stock_entity.py -v)",
      "Bash(python -m pytest tests/domain/events/test_domain_events.py -v)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(python -m pytest tests/domain/ -v)",
      "Bash(python -m pytest --tb=short)",
      "Bash(pyright:*)",
      "Bash(python -m pytest tests/domain/ -q)",
      "Bash(python -m pytest tests/application/commands/test_stock_commands.py -v)",
      "Bash(python -m pytest tests/application/services/test_stock_application_service.py -v)",
      "Bash(python -m pytest tests/application/ -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py -v)",
      "Bash(python -m pytest tests/infrastructure/ -v --tb=line)",
      "Bash(python -m pytest tests/infrastructure/ -v)",
      "Bash(python -m pytest tests/infrastructure/ -v --tb=short)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_create_duplicate_symbol_raises_error -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_rollback_on_exception -v -s)",
      "Bash(python -m pytest tests/infrastructure/ -x --tb=short)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_provides_repository_access -v)",
      "Bash(python -m pytest tests/infrastructure/ --tb=no -q)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_commit_without_context_manager -v)",
      "Bash(python -m pytest --tb=no -q)",
      "Bash(python -m pytest --tb=short -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py::TestDatabaseConnection::test_close_connection -v -s)",
      "Bash(python3:*)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_database_connection.py::TestDatabaseConnection::test_close_connection -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_nested_context_managers_not_supported -v -s)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_nested_context_managers_not_supported -v)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_error_handling -v -s)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_repository_handles_database_errors -v -s)",
      "Bash(python -m pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py::TestSqliteUnitOfWork::test_unit_of_work_error_handling -v)",
      "Bash(python -m pytest tests/infrastructure/repositories/test_sqlite_stock_repository.py::TestSqliteStockRepository::test_repository_handles_database_errors -v)",
      "Bash(python -m pytest --tb=no --co -q)",
      "Bash(python -m pytest tests/presentation/ -v --tb=short)",
      "Bash(python -m pytest tests/presentation/view_models/ -v --tb=short)",
      "Bash(find:*)",
      "Bash(python -m pytest tests/presentation/controllers/ -v --tb=short)",
      "Bash(grep:*)",
      "Bash(python -m pytest tests/presentation/controllers/test_stock_controller.py::TestStockController::test_controller_input_sanitization -v)",
      "Bash(python -m pytest tests/presentation/controllers/test_stock_controller.py -v)",
      "Bash(python -m pytest tests/presentation/ -v)",
      "Bash(python -m pytest tests/presentation/coordinators/test_stock_page_coordinator.py -v)",
      "Bash(python -m pytest tests/ --tb=no -q)",
      "Bash(python -m pytest tests/presentation/ --tb=short -q)",
      "Bash(python -m pytest tests/presentation/view_models/ -v)",
      "Bash(python:*)",
      "Bash(pytest:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(pylint:*)",
      "Bash(sed:*)",
      "Bash(ls:*)",
      "Bash(git check-ignore:*)",
      "Bash(git config:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(awk:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(whoami:*)",
      "Bash(pwd:*)",
      "Bash(date:*)",
      "Bash(echo:*)",
      "Bash(printf:*)",
      "Bash(tree:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(du:*)",
      "Bash(df:*)",
      "Bash(ps:*)",
      "Bash(top:*)",
      "Bash(htop:*)",
      "Bash(uptime:*)",
      "Bash(uname:*)",
      "Bash(env:*)",
      "Bash(history:*)",
      "Bash(alias:*)",
      "Bash(type:*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(ln:*)",
      "Bash(cp:*)",
      "Bash(rsync:*)",
      "Bash(tar:*)",
      "Bash(zip:*)",
      "Bash(unzip:*)",
      "Bash(gzip:*)",
      "Bash(gunzip:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ping:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "Bash(git remote:*)",
      "Bash(git show:*)",
      "Bash(git ls-files:*)",
      "Bash(gh:*)",
      "Bash(pre-commit install:*)",
      "mcp__serena__*",
      "mcp__serena__find_symbol",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__read_memory",
      "mcp__serena__think_about_collected_information",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__serena__summarize_changes",
      "Bash(pip install:*)",
      "mcp__serena__list_dir",
      "Bash(npx pyright:*)",
      "mcp__serena__write_memory",
      "Bash(PYTHONPATH=. pylint --rcfile=.pylintrc-core src/domain/entities/base.py)",
      "Bash(./hooks/run-quality-checks.sh:*)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,import-outside-toplevel,line-too-long,no-member,too-many-positional-arguments,fixme,protected-access\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py 2 >& 1)",
      "Bash(PYTHONPATH=. pylint --enable=\"raise-missing-from\" --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,import-outside-toplevel,line-too-long,no-member,too-many-positional-arguments,fixme,protected-access\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py src/application/services/stock_application_service.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --enable=\"unused-import,unused-variable\" --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,import-outside-toplevel,line-too-long,no-member,too-many-positional-arguments,fixme,protected-access\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --enable=\"unused-import,unused-variable,consider-using-enumerate\" --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,import-outside-toplevel,line-too-long,no-member,too-many-positional-arguments,fixme,protected-access\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/ src/application/services/stock_application_service.py 2 >& 1)",
      "Bash(time:*)",
      "Bash(/dev/null)",
      "Bash(PYTHONPATH=. pylint --list-msgs)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/base.py src/application/services/stock_application_service.py)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=12 --max-returns=8 --max-branches=12 --max-statements=40 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/infrastructure/repositories/sqlite_stock_repository.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=10 --max-returns=8 --max-branches=10 --max-statements=30 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=10 --max-returns=8 --max-branches=10 --max-statements=30 --max-positional-arguments=8 --min-similarity-lines=10 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,wrong-import-order,ungrouped-imports,line-too-long,no-member,too-many-arguments,too-many-positional-arguments,too-many-locals,fixme,duplicate-code,import-outside-toplevel,broad-exception-caught,missing-class-docstring,missing-function-docstring,consider-using-join,reimported\" --allowed-redefined-builtins=id --max-args=10 --max-locals=15 --max-returns=8 --max-branches=15 --max-statements=40 --docstring-min-length=10 src/presentation/view_models/stock_view_models.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,wrong-import-order,ungrouped-imports,line-too-long,no-member,too-many-arguments,too-many-positional-arguments,too-many-locals,fixme,duplicate-code,import-outside-toplevel,broad-exception-caught,missing-class-docstring,missing-function-docstring,consider-using-join,reimported\" --allowed-redefined-builtins=id --max-args=10 --max-locals=15 --max-returns=8 --max-branches=15 --max-statements=40 --docstring-min-length=10 src/presentation/controllers/stock_controller.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,wrong-import-order,ungrouped-imports,line-too-long,no-member,redefined-outer-name,attribute-defined-outside-init,duplicate-code,unused-variable,unused-argument,protected-access,singleton-comparison,pointless-statement,unnecessary-pass,broad-exception-caught,comparison-with-itself,unexpected-keyword-arg,logging-fstring-interpolation,no-else-return,import-outside-toplevel,unnecessary-negation,missing-class-docstring,missing-function-docstring,abstract-class-instantiated,consider-using-with,too-many-arguments,too-many-positional-arguments,fixme,too-many-lines\" --allowed-redefined-builtins=id tests/domain/entities/test_stock_entity.py 2>&1)",
      "Bash(PYTHONPATH=. pylint --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,wrong-import-order,ungrouped-imports,line-too-long,no-member,missing-class-docstring,missing-function-docstring,missing-module-docstring,invalid-name,too-many-arguments,too-many-positional-arguments,too-many-locals,import-outside-toplevel,broad-exception-caught,duplicate-code,fixme,global-statement,global-variable-not-assigned,wildcard-import,unused-wildcard-import,c-extension-no-member,consider-iterating-dictionary\" --allowed-redefined-builtins=id config.py 2>&1)",
      "Bash(bash:*)",
      "Bash(PYTHONPATH=. pylint -j 0 --persistent=yes --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=8 --max-returns=8 --max-branches=10 --max-statements=25 --max-positional-arguments=8 --min-similarity-lines=8 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/domain/entities/stock_entity.py)",
      "Bash(PYTHONPATH=. pylint -j 0 --persistent=yes --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,unnecessary-pass,wrong-import-order,ungrouped-imports,line-too-long,too-many-positional-arguments,fixme\" --allowed-redefined-builtins=id --max-args=12 --max-locals=8 --max-returns=8 --max-branches=10 --max-statements=25 --max-positional-arguments=8 --min-similarity-lines=8 --good-names=i,j,k,ex,Run,_,id --docstring-min-length=10 src/application/services/stock_application_service.py)",
      "Bash(PYTHONPATH=. pylint -j 0 --persistent=yes --disable=\"too-few-public-methods,too-many-public-methods,too-many-instance-attributes,wrong-import-order,ungrouped-imports,line-too-long,no-member,too-many-arguments,too-many-positional-arguments,fixme,duplicate-code,import-outside-toplevel,broad-exception-caught,missing-class-docstring,consider-using-join,reimported\" --allowed-redefined-builtins=id --max-args=10 --max-locals=12 --max-returns=8 --max-branches=15 --max-statements=35 --docstring-min-length=10 src/presentation/controllers/stock_controller.py)",
      "Bash(PYTHONPATH=. pylint:*)",
      "mcp__serena__insert_before_symbol",
      "Bash(pre-commit run:*)",
      "Bash(mypy:*)",
      "Bash(flake8:*)",
      "Bash(bandit:*)",
      "Bash(safety check)",
      "Bash(safety scan)",
      "Bash(pip-audit:*)",
      "mcp__serena__initial_instructions",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__find_file",
      "mcp__serena__read_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__replace_regex",
      "Bash(PYTHONPATH=. python -c:*)",
      "mcp__serena__get_symbols_overview",
      "Bash(PYTHONPATH=. pytest tests/infrastructure/persistence/test_sqlite_unit_of_work.py -v)",
      "Bash(PYTHONPATH=. pytest tests/presentation/view_models/ -v)",
      "Bash(PYTHONPATH=. pytest tests/presentation/view_models/ tests/infrastructure/persistence/test_sqlite_unit_of_work.py -v)",
      "Bash(PYTHONPATH=. pytest tests/infrastructure/persistence/test_database_connection_protocol.py::TestUnitOfWorkProtocolIntegration::test_unit_of_work_transaction_isolation -v)",
      "mcp__serena__find_referencing_symbols",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__execute_shell_command",
      "Bash(lint-imports)",
      "Bash(pydocstyle:*)",
      "Bash(interrogate:*)",
      "Bash(pip show:*)",
      "Bash(pip index versions:*)",
      "Bash(docstr-coverage:*)",
      "Bash(pip uninstall:*)",
      "mcp__serena__create_text_file",
      "mcp__serena__activate_project",
      "mcp__serena__get_current_config",
      "mcp__serena__switch_modes",
      "mcp__serena__list_memories",
      "Bash(coverage debug:*)",
      "Bash(coverage run:*)",
      "Bash(coverage report:*)",
      "Bash(coverage --version)",
      "Bash(true)",
      "Bash(git rm:*)",
      "Bash(PYTHONPATH=. pyright src/presentation/ --pythonpath . --typechecking strict)",
      "Bash(pip freeze)",
      "Bash(make:*)",
      "Bash(pip search:*)",
      "Bash(git restore:*)",
      "Bash(source:*)"
    ],
    "deny": []
  }
}